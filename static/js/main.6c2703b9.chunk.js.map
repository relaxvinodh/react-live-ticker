{"version":3,"sources":["components/Header/index.tsx","context/index.ts","components/BusyBox.tsx","components/Chart/index.tsx","components/Table/TableBody.tsx","components/Table/TableField.tsx","components/Table/TableHeader.tsx","components/Table/TableLabel.tsx","components/Table/TableRow.tsx","components/Table/index.tsx","components/reducer/actions.ts","components/reducer/utils.ts","components/reducer/index.ts","useWebSocket.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","BooksContext","createContext","BusyBox","width","height","xmlns","viewBox","preserveAspectRatio","style","verticalAlign","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","transform","attributeName","type","calcMode","values","keyTimes","dur","begin","repeatCount","Rect","React","memo","value","totalMax","otherProps","useMemo","Math","abs","Chart","useContext","totals","sortedItems","R","map","idx","total","x","y","fillOpacity","TableBody","children","TableField","ratio","TableHeader","TableLabel","TableRow","Row","item","count","amount","price","TableItem","books","data","loading","Tables","ACTIONS","INITIAL","UPDATE_ASKS","DELETE_ASKS","UPDATE_BIDS","DELETE_BIDS","REQUEST_STARTED","REQUEST_SUCCESS","REQUEST_ERROR","mapRec","getValues","getItemTotalMax","max","accumalateTotal","priceSnapshot","reduce","hash","curr","srcArray","undefined","previousTotal","parseFloat","toFixed","initialState","asks","priceSnap","bids","error","dataReducer","state","payload","stateWithData","side","push","getData","asksTotals","bidsTotals","id","updatedData","String","updatedPriceSnap","a","b","updatedTotals","updatedMax","useWebSocket","booksStore","localStorage","getItem","useReducer","JSON","parse","dispatch","saveStore","useCallback","setItem","stringify","useEffect","ws","WebSocket","i","onopen","send","event","channel","symbol","onmessage","msg","Array","isArray","setTimeout","window","addEventListener","removeEventListener","close","e","console","App","Provider","Table","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c2703b9.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss';\n\nconst Header: React.FC = () => (\n  <div className=\"header\">\n    Order Book\n    {' '}\n    <span className=\"subText\"> BTC/USD</span>\n  </div>\n);\n\nexport default Header;\n","import { createContext } from 'react';\nimport { StateType } from '../components/reducer/types';\n\nconst BooksContext = createContext<StateType | null>(null);\n\nexport default BooksContext;\n","import React from 'react';\n/**\n * Loader used(mostly) for the async calls\n */\n\nconst BusyBox = () => (\n  <svg\n    width=\"20px\"\n    height=\"20px\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 100 100\"\n    preserveAspectRatio=\"xMidYMid\"\n    style={{ verticalAlign: 'middle' }}\n  >\n    <circle\n      cx=\"50\"\n      cy=\"50\"\n      fill=\"none\"\n      stroke=\"#b7b7b7\"\n      strokeWidth=\"10\"\n      r=\"35\"\n      strokeDasharray=\"164.93361431346415 56.97787143782138\"\n      transform=\"rotate(229.847 50 50)\"\n    >\n      <animateTransform\n        attributeName=\"transform\"\n        type=\"rotate\"\n        calcMode=\"linear\"\n        values=\"0 50 50;360 50 50\"\n        keyTimes=\"0;1\"\n        dur=\"1.8s\"\n        begin=\"0s\"\n        repeatCount=\"indefinite\"\n      />\n    </circle>\n  </svg>\n);\n\nexport default BusyBox;\n","import * as R from 'ramda';\nimport React, { useContext, useMemo } from 'react';\nimport BooksContext from '../../context';\nimport './chart.scss';\n\ntype ChartProps = {\n  type: 'asks' | 'bids',\n};\n\n/**\n * rect Component\n *\n * sets the width based on the value and totalMax passed\n *\n * @param value number\n * @param totalMax number\n *\n */\n\nconst Rect: React.FC<\nReact.SVGProps<SVGRectElement> & {\n  value: number, totalMax: number\n}> = React.memo(({ value, totalMax, ...otherProps }) => {\n  const width = useMemo(() => `${(Math.abs(value) * 100) / totalMax}%`, [value, totalMax]);\n  return <rect {...otherProps} width={width} />;\n});\n\nconst Chart: React.FC<ChartProps> = React.memo(({ type }) => {\n  const books = useContext(BooksContext);\n  const { totals, totalMax } = books![type];\n\n  const sortedItems = useMemo(() => {\n    if (type === 'bids') {\n      return R.sort(R.ascend(R.prop('total')), R.values(totals));\n    }\n    return R.values(totals);\n  }, [totals, type]);\n  return (\n    <div className=\"chart container\">\n      <svg className={type}>\n        {sortedItems?.map(({ total }, idx) => (\n          <Rect x=\"1\" y={17 * idx} height=\"17\" value={total} totalMax={totalMax} fillOpacity=\"1\" key={`${type}-${idx}`} />\n        ))}\n      </svg>\n    </div>\n  );\n});\n\nexport default Chart;\n","import React from 'react';\n\n/**\n * TableBody Component\n * Wrapper component when creating the body of the table\n *\n * @param children\n */\n\nconst TableBody:React.FC = ({ children }) => (\n  <div className=\"tableBody\">{children}</div>\n);\n\nexport default TableBody;\n","import React from 'react';\n\ntype TableFieldProps = {\n  ratio?: string,\n};\n\n/**\n * TableField Component\n * Each field in the row\n *\n * @param ratio Accepts a string, which is applied to the flex grow property\n * @param children\n */\n\nconst TableField:React.FC<TableFieldProps> = ({ children, ratio }) => {\n  const style = { '--ratio': ratio } as React.CSSProperties;\n  return (\n    <div className=\"tableField\" style={style}>{children}</div>\n  );\n};\n\nexport default TableField;\n","import React from 'react';\n\n/**\n * TableHeader Component\n * Wrapper component when creating the header\n *\n * @param children\n */\n\nconst TableHeader:React.FC = ({ children }) => (\n  <div className=\"tableHeader\">{children}</div>\n);\n\nexport default TableHeader;\n","import React from 'react';\n\n/**\n * TableLabel Component\n * To be used inside the TableField component\n * Should be used for only the table headers/title\n * As this will be hidden for the TableBody component\n *\n * @param children\n */\n\nconst TableLabel:React.FC = ({ children }) => (\n  <p className=\"tableLabel\">{children}</p>\n);\n\nexport default TableLabel;\n","import React from 'react';\n\n/**\n * TableRow Component\n * Should be used for every row\n *\n * @param children\n */\n\nconst TableRow:React.FC = ({ children }) => (\n  <div className=\"tableRow\">{children}</div>\n);\n\nexport default TableRow;\n","import * as R from 'ramda';\nimport React, { useContext, useMemo } from 'react';\nimport BooksContext from '../../context';\nimport BusyBox from '../BusyBox';\nimport Chart from '../Chart';\nimport './styles.scss';\nimport TableBody from './TableBody';\nimport TableField from './TableField';\nimport TableHeader from './TableHeader';\nimport TableLabel from './TableLabel';\nimport TableRow from './TableRow';\n\nexport const Row = React.memo(({ item, total }: {item?: any, total?: number}) => (\n  <TableRow>\n    <TableField>\n      <TableLabel>Count</TableLabel>\n      {item?.count}\n    </TableField>\n    <TableField>\n      <TableLabel>Amount</TableLabel>\n      {item?.amount && Math.abs(item.amount)}\n    </TableField>\n    <TableField>\n      <TableLabel>Total</TableLabel>\n      {total && Math.abs(total)}\n    </TableField>\n    <TableField>\n      <TableLabel>Price</TableLabel>\n      {item?.price}\n    </TableField>\n  </TableRow>\n));\n\nconst TableItem:React.FC<React.HTMLAttributes<HTMLDivElement> & { type: 'asks' | 'bids'}> = React.memo(\n  ({ type, ...otherProps }) => {\n    const books = useContext(BooksContext);\n    const { data, totals } = books![type];\n\n    const sortedItems = useMemo(() => {\n      if (type === 'bids') {\n        return R.sort(R.descend(R.prop('price')), R.values(data));\n      }\n      return R.values(data);\n    }, [data, type]);\n    return (\n      <div className={`table ${type ?? ''}`} {...otherProps}>\n        <TableHeader>\n          <Row />\n        </TableHeader>\n        <TableBody>\n          {books?.loading\n            ? (\n              <>\n                <BusyBox />\n                Loading ...\n              </>\n            )\n            : (\n              <>\n                <Chart type={type} />\n                {sortedItems.map((item, idx) => (\n                  <Row item={item} key={`${type}-${idx}`} total={totals[item.price]?.total} />\n                ))}\n              </>\n            )}\n        </TableBody>\n      </div>\n    );\n  },\n);\n\nconst Tables: React.FC = () => (\n  <div className=\"tableContainer\">\n    <TableItem type=\"bids\" />\n    <TableItem type=\"asks\" />\n  </div>\n);\nexport default Tables;\n","const ACTIONS = {\n  INITIAL: 'INITIAL',\n  UPDATE_ASKS: 'UPDATE_ASKS',\n  DELETE_ASKS: 'DELETE_ASKS',\n  UPDATE_BIDS: 'UPDATE_BIDS',\n  DELETE_BIDS: 'DELETE_BIDS',\n  REQUEST_STARTED: 'REQUEST_STARTED',\n  REQUEST_SUCCESS: 'REQUEST_SUCCESS',\n  REQUEST_ERROR: 'REQUEST_ERROR',\n};\n\nexport default ACTIONS;\n","/* eslint-disable no-param-reassign */\nimport * as R from 'ramda';\nimport {\n  SideType, ItemTotal, StateType, ItemType,\n} from './types';\n\n/**\n * mapRec\n *\n * @param array array of three numbers\n *\n * @return {object} object of 'price', 'count', 'amount'\n * @example\n *          const data = [1, 2, 3];\n *          const formattedData = mapRec(data);\n *\n *\n */\n\nexport const mapRec = R.applySpec<{ price: number, count: number, amount: number }>({\n  price: R.view(R.lensIndex(0)),\n  count: R.view(R.lensIndex(1)),\n  amount: R.view(R.lensIndex(2)),\n});\n\nconst getValues:(obj: SideType['totals']) => ItemTotal[] = R.values;\n\nexport const getItemTotalMax = R.pipe(\n  getValues,\n  R.map<ItemTotal, number>(R.prop('total')),\n  R.apply(Math.max),\n);\n\n/**\n * accumalateTotal\n *\n * @param priceSnapShot array of numbers of the keys in sorted order\n * @param data data object indexed by the price\n *\n * @return total object indexed by the price\n * @example\n *          const priceSnap = [22221, 22222, 22223];\n *          const data = {\n *            22221: { 'price': 22221, 'count': 2, 'amount': 1}\n *            22222: { 'price': 22222, 'count': 3, 'amount': 1}\n *            22223: { 'price': 22223, 'count': 4, 'amount': 1}\n *          }\n *          accumalateTotal(priceSnap, data);\n */\n\nexport const accumalateTotal = (priceSnapshot: number[], data: SideType['data']) => priceSnapshot.reduce((hash, curr, idx, srcArray) => {\n  if (hash[curr] === undefined) {\n    hash[curr] = {} as ItemTotal;\n  }\n\n  const { amount } = data[curr];\n  const { total: previousTotal = 0 } = hash[srcArray[idx - 1]] || {};\n  hash[curr] = { amount, total: parseFloat((previousTotal + amount).toFixed(8)) };\n  return hash;\n}, {} as SideType['totals']);\n\n/**\n * getData\n *\n * @param payload Array<Array<number>>\n * @param state state value\n *\n * @return updated state value\n */\nexport const getData = <T extends Array<number>>(\n  payload: T[], state: StateType) => R.reduce(\n    (hash: StateType, curr: T) => {\n      const [price, , amount] = curr;\n      const side = amount >= 0 ? 'bids' : 'asks';\n\n      if (hash[side].data[price] === undefined) {\n        hash[side].data[price] = {} as ItemType;\n      }\n\n      hash[side].priceSnap.push(price);\n      hash[side].data[price] = mapRec(curr);\n\n      return hash;\n    }, state, payload,\n  );\n","import * as R from 'ramda';\nimport ACTIONS from './actions';\nimport {\n  IndexedItemType, ItemTotal, StateType, Totals,\n} from './types';\nimport {\n  accumalateTotal, getData, getItemTotalMax, mapRec,\n} from './utils';\n\nexport const initialState: StateType = {\n  asks: {\n    data: {}, priceSnap: [], totals: {} as ItemTotal, totalMax: 0,\n  },\n  bids: {\n    data: {}, priceSnap: [], totals: {} as ItemTotal, totalMax: 0,\n  },\n  loading: false,\n  error: null,\n};\n\nconst dataReducer = <T extends Array<number>>(\n  state: StateType, [type, payload]: [string, T[] | T | undefined],\n) => {\n  const {\n    INITIAL, UPDATE_ASKS, DELETE_ASKS, UPDATE_BIDS, DELETE_BIDS,\n    REQUEST_STARTED, REQUEST_SUCCESS,\n  } = ACTIONS;\n  switch (type) {\n    case REQUEST_STARTED: {\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    }\n    case REQUEST_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: null,\n      };\n    }\n    case INITIAL: {\n      const stateWithData = getData(payload as T[], state);\n      const asksTotals = accumalateTotal(state.asks.priceSnap, state.asks.data);\n      const bidsTotals = accumalateTotal(state.bids.priceSnap, state.bids.data);\n      const totalMax = Math.max(getItemTotalMax(asksTotals), getItemTotalMax(bidsTotals));\n      return R.pipe(\n        R.assocPath<Totals, StateType>(['asks', 'totals'], asksTotals),\n        R.assocPath(['asks', 'totalMax'], totalMax),\n        R.assocPath(['bids', 'totalMax'], totalMax),\n        R.assocPath(['bids', 'totals'], bidsTotals),\n      )(stateWithData);\n    }\n    case UPDATE_ASKS: {\n      const [id] = payload as T;\n      const updatedData = R.assoc(String(id), mapRec(payload), state.asks.data);\n      const updatedPriceSnap = R.ifElse(\n        R.includes(id),\n        R.identity,\n        R.pipe(\n          R.concat([id]),\n          R.sort((a, b) => a - b),\n        ),\n      )(state.asks.priceSnap);\n      const updatedTotals = accumalateTotal(updatedPriceSnap, updatedData);\n      const updatedMax = Math.max(getItemTotalMax(updatedTotals), state.bids.totalMax);\n\n      return R.pipe(\n        R.assocPath<IndexedItemType, StateType>(['asks', 'data'], updatedData),\n        R.assocPath(['asks', 'priceSnap'], updatedPriceSnap),\n        R.assocPath(['asks', 'totals'], updatedTotals),\n        R.assocPath(['asks', 'totalMax'], updatedMax),\n      )(state);\n    }\n    case DELETE_ASKS: {\n      const [id] = payload as T;\n      const updatedData = R.dissoc<IndexedItemType>(String(id), state.asks.data);\n      const updatedPriceSnap = R.without([id], state.asks.priceSnap);\n      const updatedTotals = accumalateTotal(updatedPriceSnap, updatedData);\n      const updatedMax = Math.max(getItemTotalMax(updatedTotals), state.bids.totalMax);\n\n      return R.pipe(\n        R.assocPath<IndexedItemType, StateType>(['asks', 'data'], updatedData),\n        R.assocPath(['asks', 'priceSnap'], updatedPriceSnap),\n        R.assocPath(['asks', 'totals'], updatedTotals),\n        R.assocPath(['asks', 'totalMax'], updatedMax),\n      )(state);\n    }\n    case UPDATE_BIDS: {\n      const [id] = payload as T;\n      const updatedData = R.assoc(String(id), mapRec(payload), state.bids.data);\n      const updatedPriceSnap = R.ifElse(\n        R.includes(id),\n        R.identity,\n        R.pipe(\n          R.concat([id]),\n          R.sort((a, b) => b - a),\n        ),\n      )(state.bids.priceSnap);\n      const updatedTotals = accumalateTotal(updatedPriceSnap, updatedData);\n      const updatedMax = Math.max(getItemTotalMax(updatedTotals), state.asks.totalMax);\n\n      return R.pipe(\n        R.assocPath<IndexedItemType, StateType>(['bids', 'data'], updatedData),\n        R.assocPath(['bids', 'priceSnap'], updatedPriceSnap),\n        R.assocPath(['bids', 'totals'], updatedTotals),\n        R.assocPath(['bids', 'totalMax'], updatedMax),\n      )(state);\n    }\n    case DELETE_BIDS: {\n      const [id] = payload as T;\n      const updatedData = R.dissoc<IndexedItemType>(String(id), state.bids.data);\n      const updatedPriceSnap = R.without([id], state.bids.priceSnap);\n      const updatedTotals = accumalateTotal(updatedPriceSnap, updatedData);\n      const updatedMax = Math.max(getItemTotalMax(updatedTotals), state.asks.totalMax);\n\n      return R.pipe(\n        R.assocPath<IndexedItemType, StateType>(['bids', 'data'], updatedData),\n        R.assocPath(['bids', 'priceSnap'], updatedPriceSnap),\n        R.assocPath(['bids', 'totals'], updatedTotals),\n        R.assocPath(['bids', 'totalMax'], updatedMax),\n      )(state);\n    }\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { useCallback, useEffect, useReducer } from 'react';\nimport './App.scss';\nimport dataReducer, { initialState } from './components/reducer';\nimport ACTIONS from './components/reducer/actions';\n\nconst useWebSocket = () => {\n  const booksStore = localStorage.getItem('booksStore');\n  const [state, dispatch] = useReducer(\n    dataReducer, booksStore ? JSON.parse(booksStore) : initialState,\n  );\n\n  const saveStore = useCallback(() => localStorage.setItem('booksStore', JSON.stringify(state)), [state]);\n\n  useEffect(() => {\n    const ws = new WebSocket('wss://api-pub.bitfinex.com/ws/2');\n    let i = 0;\n    ws.onopen = () => {\n      dispatch([ACTIONS.REQUEST_STARTED, undefined]);\n      ws.send(JSON.stringify({\n        event: 'subscribe',\n        channel: 'book',\n        symbol: 'tBTCUSD',\n      }));\n    };\n    ws.onmessage = ({ data }) => {\n      const msg = JSON.parse(data);\n      if (msg.event) return;\n      if (msg[1] && msg[1][0] && Array.isArray(msg[1][0])) {\n        dispatch([ACTIONS.REQUEST_SUCCESS, undefined]);\n        dispatch([ACTIONS.INITIAL, msg[1]]);\n      } else {\n        const [, count, amount] = msg[1];\n        i += 1;\n        if (count > 0) {\n          setTimeout(() => {\n            dispatch([amount > 0 ? ACTIONS.UPDATE_BIDS : ACTIONS.UPDATE_ASKS, msg[1]]);\n          }, i * 200);\n        } else {\n          setTimeout(() => {\n            dispatch([amount > 0 ? ACTIONS.DELETE_BIDS : ACTIONS.DELETE_ASKS, msg[1]]);\n          }, i * 100);\n        }\n      }\n    };\n\n    window.addEventListener('unload', saveStore, false);\n    return () => {\n      try {\n        window.removeEventListener('unload', saveStore, false);\n        ws.close();\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e, 'error in closing websocket');\n      }\n    };\n  }, []);\n\n  return state;\n};\n\nexport default useWebSocket;\n","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header';\nimport Tables from './components/Table';\nimport BooksContext from './context';\nimport useWebSocket from './useWebSocket';\n\nconst App = () => {\n  const state = useWebSocket();\n  return (\n    <div className=\"App\">\n      <Header />\n      <BooksContext.Provider value={state}>\n        <Tables />\n      </BooksContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}