{"version":3,"sources":["components/Header/index.tsx","components/reducer/actions.ts","components/reducer/utils.ts","components/reducer/index.ts","context/index.ts","components/Chart/index.tsx","components/Table/TableBody.tsx","components/Table/TableField.tsx","components/Table/TableHeader.tsx","components/Table/TableLabel.tsx","components/Table/TableRow.tsx","components/Table/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","ACTIONS","INITIAL","UPDATE_ASKS","DELETE_ASKS","UPDATE_BIDS","DELETE_BIDS","mapRec","R","price","count","amount","getValues","getItemTotalMax","Math","max","accumalateTotal","priceSnapshot","data","reduce","hash","curr","idx","srcArray","undefined","total","previousTotal","parseFloat","toFixed","initialState","asks","priceSnap","totals","totalMax","bids","dataReducer","state","type","payload","stateWithData","side","push","getData","asksTotals","bidsTotals","id","updatedData","String","updatedPriceSnap","a","b","updatedTotals","updatedMax","BooksContext","createContext","Rect","React","memo","value","otherProps","width","useMemo","abs","Chart","useContext","sortedItems","map","x","y","height","fillOpacity","TableBody","children","TableField","style","ratio","TableHeader","TableLabel","TableRow","Row","item","TableItem","Tables","App","booksStore","localStorage","getItem","useReducer","JSON","parse","dispatch","saveStore","useCallback","setItem","stringify","useEffect","ws","WebSocket","onopen","send","event","channel","symbol","onmessage","msg","Array","isArray","window","addEventListener","removeEventListener","close","e","console","error","Provider","Table","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a75d779e.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss';\n\nconst Header: React.FC = () => (\n  <div className=\"header\">\n    Order Book\n    {' '}\n    <span className=\"subText\"> BTC/USD</span>\n  </div>\n);\n\nexport default Header;\n","const ACTIONS = {\n  INITIAL: 'INITIAL',\n  UPDATE_ASKS: 'UPDATE_ASKS',\n  DELETE_ASKS: 'DELETE_ASKS',\n  UPDATE_BIDS: 'UPDATE_BIDS',\n  DELETE_BIDS: 'DELETE_BIDS',\n};\n\nexport default ACTIONS;\n","/* eslint-disable no-param-reassign */\nimport * as R from 'ramda';\nimport {\n  SideType, ItemTotal, StateType, ItemType,\n} from './types';\n\nexport const mapRec = R.applySpec<{ price: number, count: number, amount: number }>({\n  price: R.view(R.lensIndex(0)),\n  count: R.view(R.lensIndex(1)),\n  amount: R.view(R.lensIndex(2)),\n});\n\nconst getValues:(obj: SideType['totals']) => ItemTotal[] = R.values;\n\nexport const getItemTotalMax = R.pipe(\n  getValues,\n  R.map<ItemTotal, number>(R.prop('total')),\n  R.apply(Math.max),\n);\n\nexport const accumalateTotal = (priceSnapshot: number[], data: SideType['data']) => priceSnapshot.reduce((hash, curr, idx, srcArray) => {\n  if (hash[curr] === undefined) {\n    hash[curr] = {} as ItemTotal;\n  }\n\n  const { amount } = data[curr];\n  const { total: previousTotal = 0 } = hash[srcArray[idx - 1]] || {};\n  hash[curr] = { amount, total: parseFloat((previousTotal + amount).toFixed(8)) };\n  return hash;\n}, {} as SideType['totals']);\n\nexport const getData = <T extends Array<number>>(\n  payload: T[], state: StateType) => R.reduce(\n    (hash: StateType, curr: T) => {\n      const [price, , amount] = curr;\n      const side = amount >= 0 ? 'bids' : 'asks';\n\n      if (hash[side].data[price] === undefined) {\n        hash[side].data[price] = {} as ItemType;\n      }\n\n      hash[side].priceSnap.push(price);\n      hash[side].data[price] = mapRec(curr);\n\n      return hash;\n    }, state, payload,\n  );\n","import * as R from 'ramda';\nimport ACTIONS from './actions';\nimport {\n  IndexedItemType, ItemTotal, StateType, Totals,\n} from './types';\nimport {\n  accumalateTotal, getData, getItemTotalMax, mapRec,\n} from './utils';\n\nexport const initialState: StateType = {\n  asks: {\n    data: {}, priceSnap: [], totals: {} as ItemTotal, totalMax: 0,\n  },\n  bids: {\n    data: {}, priceSnap: [], totals: {} as ItemTotal, totalMax: 0,\n  },\n};\n\nconst dataReducer = <T extends Array<number>>(\n  state: StateType, [type, payload]: [string, T[] | T],\n) => {\n  const {\n    INITIAL, UPDATE_ASKS, DELETE_ASKS, UPDATE_BIDS, DELETE_BIDS,\n  } = ACTIONS;\n  switch (type) {\n    case INITIAL: {\n      const stateWithData = getData(payload as T[], state);\n      const asksTotals = accumalateTotal(state.asks.priceSnap, state.asks.data);\n      const bidsTotals = accumalateTotal(state.bids.priceSnap, state.bids.data);\n      const totalMax = Math.max(getItemTotalMax(asksTotals), getItemTotalMax(bidsTotals));\n      return R.pipe(\n        R.assocPath<Totals, StateType>(['asks', 'totals'], asksTotals),\n        R.assocPath(['asks', 'totalMax'], totalMax),\n        R.assocPath(['bids', 'totalMax'], totalMax),\n        R.assocPath(['bids', 'totals'], bidsTotals),\n      )(stateWithData);\n    }\n    case UPDATE_ASKS: {\n      const [id] = payload as T;\n      const updatedData = R.assoc(String(id), mapRec(payload), state.asks.data);\n      const updatedPriceSnap = R.ifElse(\n        R.includes(id),\n        R.identity,\n        R.pipe(\n          R.concat([id]),\n          R.sort((a, b) => a - b),\n        ),\n      )(state.asks.priceSnap);\n      const updatedTotals = accumalateTotal(updatedPriceSnap, updatedData);\n      const updatedMax = Math.max(getItemTotalMax(updatedTotals), state.bids.totalMax);\n\n      return R.pipe(\n        R.assocPath<IndexedItemType, StateType>(['asks', 'data'], updatedData),\n        R.assocPath(['asks', 'priceSnap'], updatedPriceSnap),\n        R.assocPath(['asks', 'totals'], updatedTotals),\n        R.assocPath(['asks', 'totalMax'], updatedMax),\n      )(state);\n    }\n    case DELETE_ASKS: {\n      const [id] = payload as T;\n      const updatedData = R.dissoc<IndexedItemType>(String(id), state.asks.data);\n      const updatedPriceSnap = R.without([id], state.asks.priceSnap);\n      const updatedTotals = accumalateTotal(updatedPriceSnap, updatedData);\n      const updatedMax = Math.max(getItemTotalMax(updatedTotals), state.bids.totalMax);\n\n      return R.pipe(\n        R.assocPath<IndexedItemType, StateType>(['asks', 'data'], updatedData),\n        R.assocPath(['asks', 'priceSnap'], updatedPriceSnap),\n        R.assocPath(['asks', 'totals'], updatedTotals),\n        R.assocPath(['asks', 'totalMax'], updatedMax),\n      )(state);\n    }\n    case UPDATE_BIDS: {\n      const [id] = payload as T;\n      const updatedData = R.assoc(String(id), mapRec(payload), state.bids.data);\n      const updatedPriceSnap = R.ifElse(\n        R.includes(id),\n        R.identity,\n        R.pipe(\n          R.concat([id]),\n          R.sort((a, b) => b - a),\n        ),\n      )(state.bids.priceSnap);\n      const updatedTotals = accumalateTotal(updatedPriceSnap, updatedData);\n      const updatedMax = Math.max(getItemTotalMax(updatedTotals), state.asks.totalMax);\n\n      return R.pipe(\n        R.assocPath<IndexedItemType, StateType>(['bids', 'data'], updatedData),\n        R.assocPath(['bids', 'priceSnap'], updatedPriceSnap),\n        R.assocPath(['bids', 'totals'], updatedTotals),\n        R.assocPath(['bids', 'totalMax'], updatedMax),\n      )(state);\n    }\n    case DELETE_BIDS: {\n      const [id] = payload as T;\n      const updatedData = R.dissoc<IndexedItemType>(String(id), state.bids.data);\n      const updatedPriceSnap = R.without([id], state.bids.priceSnap);\n      const updatedTotals = accumalateTotal(updatedPriceSnap, updatedData);\n      const updatedMax = Math.max(getItemTotalMax(updatedTotals), state.asks.totalMax);\n\n      return R.pipe(\n        R.assocPath<IndexedItemType, StateType>(['bids', 'data'], updatedData),\n        R.assocPath(['bids', 'priceSnap'], updatedPriceSnap),\n        R.assocPath(['bids', 'totals'], updatedTotals),\n        R.assocPath(['bids', 'totalMax'], updatedMax),\n      )(state);\n    }\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { createContext } from 'react';\nimport { StateType } from '../components/reducer/types';\n\nconst BooksContext = createContext<StateType | null>(null);\n\nexport default BooksContext;\n","/* eslint-disable no-console */\nimport * as R from 'ramda';\nimport React, { useContext, useMemo } from 'react';\nimport BooksContext from '../../context';\nimport './chart.scss';\n\ntype ChartProps = {\n  type: 'asks' | 'bids',\n};\n\nconst Rect: React.FC<\nReact.SVGProps<SVGRectElement> & {\n  value: number, totalMax: number\n}> = React.memo(({ value, totalMax, ...otherProps }) => {\n  const width = useMemo(() => `${(Math.abs(value) * 100) / totalMax}%`, [value, totalMax]);\n  return <rect {...otherProps} width={width} />;\n});\n\nconst Chart: React.FC<ChartProps> = React.memo(({ type }) => {\n  const books = useContext(BooksContext);\n  const { totals, totalMax } = books![type];\n\n  const sortedItems = useMemo(() => {\n    if (type === 'bids') {\n      return R.sort(R.ascend(R.prop('total')), R.values(totals));\n    }\n    return R.values(totals);\n  }, [totals, type]);\n  return (\n    <div className=\"chart container\">\n      <svg className={type}>\n        {sortedItems?.map(({ total }, idx) => (\n          <Rect x=\"1\" y={17 * idx} height=\"17\" value={total} totalMax={totalMax} fillOpacity=\"1\" key={`${type}-${idx}`} />\n        ))}\n      </svg>\n    </div>\n  );\n});\n\nexport default Chart;\n","import React from 'react';\n\nconst TableBody:React.FC = ({ children }) => (\n  <div className=\"tableBody\">{children}</div>\n);\n\nexport default TableBody;\n","import React from 'react';\n\ntype TableFieldProps = {\n  ratio?: string,\n};\n\nconst TableField:React.FC<TableFieldProps> = ({ children, ratio }) => {\n  const style = { '--ratio': ratio } as React.CSSProperties;\n  return (\n    <div className=\"tableField\" style={style}>{children}</div>\n  );\n};\n\nexport default TableField;\n","import React from 'react';\n\nconst TableHeader:React.FC = ({ children }) => (\n  <div className=\"tableHeader\">{children}</div>\n);\n\nexport default TableHeader;\n","import React from 'react';\n\nconst TableLabel:React.FC = ({ children }) => (\n  <p className=\"tableLabel\">{children}</p>\n);\n\nexport default TableLabel;\n","import React from 'react';\n\nconst TableRow:React.FC = ({ children }) => (\n  <div className=\"tableRow\">{children}</div>\n);\n\nexport default TableRow;\n","import * as R from 'ramda';\nimport React, { useContext, useMemo } from 'react';\nimport BooksContext from '../../context';\nimport Chart from '../Chart';\nimport './styles.scss';\nimport TableBody from './TableBody';\nimport TableField from './TableField';\nimport TableHeader from './TableHeader';\nimport TableLabel from './TableLabel';\nimport TableRow from './TableRow';\n\nexport const Row = React.memo(({ item, total }: {item?: any, total?: number}) => (\n  <TableRow>\n    <TableField>\n      <TableLabel>Count</TableLabel>\n      {item?.count}\n    </TableField>\n    <TableField>\n      <TableLabel>Amount</TableLabel>\n      {item?.amount && Math.abs(item.amount)}\n    </TableField>\n    <TableField>\n      <TableLabel>Total</TableLabel>\n      {total && Math.abs(total)}\n    </TableField>\n    <TableField>\n      <TableLabel>Price</TableLabel>\n      {item?.price}\n    </TableField>\n  </TableRow>\n));\n\nconst TableItem:React.FC<React.HTMLAttributes<HTMLDivElement> & { type: 'asks' | 'bids'}> = React.memo((\n  { type, ...otherProps },\n) => {\n  const books = useContext(BooksContext);\n  const { data, totals } = books![type];\n\n  const sortedItems = useMemo(() => {\n    if (type === 'bids') {\n      return R.sort(R.descend(R.prop('price')), R.values(data));\n    }\n    return R.values(data);\n  }, [data, type]);\n  return (\n    <div className={`table ${type ?? ''}`} {...otherProps}>\n      <TableHeader>\n        <Row />\n      </TableHeader>\n      <TableBody>\n        <Chart type={type} />\n        {sortedItems.map((item, idx) => (\n          <Row item={item} key={`${type}-${idx}`} total={totals[item.price].total} />\n        ))}\n      </TableBody>\n    </div>\n  );\n});\n\nconst Tables: React.FC = () => (\n  <div className=\"tableContainer\">\n    <TableItem type=\"bids\" />\n    <TableItem type=\"asks\" />\n  </div>\n);\nexport default Tables;\n","import React, { useCallback, useEffect, useReducer } from 'react';\nimport './App.scss';\nimport Header from './components/Header';\nimport dataReducer, { initialState } from './components/reducer';\nimport ACTIONS from './components/reducer/actions';\nimport Tables from './components/Table';\nimport BooksContext from './context';\n\nconst App = () => {\n  const booksStore = localStorage.getItem('booksStore');\n  const [state, dispatch] = useReducer(\n    dataReducer, booksStore ? JSON.parse(booksStore) : initialState,\n  );\n\n  const saveStore = useCallback(() => localStorage.setItem('booksStore', JSON.stringify(state)), [state]);\n\n  useEffect(() => {\n    const ws = new WebSocket('wss://api-pub.bitfinex.com/ws/2');\n    ws.onopen = () => {\n      ws.send(JSON.stringify({\n        event: 'subscribe',\n        channel: 'book',\n        symbol: 'tBTCUSD',\n      }));\n    };\n    ws.onmessage = ({ data }) => {\n      const msg = JSON.parse(data);\n      if (msg.event) return;\n      if (msg[1] && msg[1][0] && Array.isArray(msg[1][0])) {\n        dispatch([ACTIONS.INITIAL, msg[1]]);\n      } else {\n        const [, count, amount] = msg[1];\n        if (count > 0) {\n          dispatch([amount > 0 ? ACTIONS.UPDATE_BIDS : ACTIONS.UPDATE_ASKS, msg[1]]);\n        } else {\n          dispatch([amount > 0 ? ACTIONS.DELETE_BIDS : ACTIONS.DELETE_ASKS, msg[1]]);\n        }\n      }\n    };\n\n    window.addEventListener('unload', saveStore, false);\n    return () => {\n      try {\n        window.removeEventListener('unload', saveStore, false);\n        ws.close();\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e, 'error in closing websocket');\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <BooksContext.Provider value={state}>\n        <Tables />\n      </BooksContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}